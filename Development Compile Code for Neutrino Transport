// Development Compile Code for Neutrino Transport Network
// Raghav Chari, Adam Cole
#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <string.h>
#include <stdbool.h>
#include <ctime>
using namespace std;
using std::string;

// Function signatures in main:

// Global Variables

// double Model = '001';
// double N_g = 40;
double stop_time = 1.0e-2;
// double t = 2.0e-19;
// double t_W0 = 1.0e-10;
// double dt_min = 1.0e-16;
// double t_max = 1.0e-01;
double dt = 1.0;
// double dt_grw = 1.003;
// double dt_dec = 0.90;

// double dt_FE  = dt;
// double dt_EA  = dt;
// double dt_PE  = dt;

// bool reStart  = 0;

// double G_A = 7.5d-01;    
// double G_B = 1.0d+02;    
// double G_C = sqrt(50.0);

// int cycleM = 10e9;    
// int cycleD = 100;     
// int cycleW = 10;      

double tolPE = 1.0e-01;  
double tolC  = 1.0e-09;

int FE    = 0;
int EA    = 1;
// int FE_PE = 2;
// int QSS1  = 4;
// int QSS2  = 5;
//  int BE    = 6;

// char scheme[18] = "ExplicitAsymptotic";

char Comment = '';

char PlotFileDir[6] = "Output";
char PlotFileName[8] = "PlotFile";
int PlotFileNumber = 0;
int nPlotFiles = 100; 

// Class defenitions 

class Utilities{
	private:
	public:
// 		void initalizeNES(model, N_G){

		}


}

// Main

int main() {

	pFile = fopen("output/NT.data","W")
	int totalTimeSteps = 0;
	// Logfile(stop_time, t, t_W0, dt, G_A, G_B, G_C, tolC, Scheme, Comment);
	// initializeNES( Model, N_g);

	fprintf(pFile, " t       dt       totalTimeSteps       "); 

	while(t < stoptime){

	fprintf(pFile, "/n%7.4d %7.4d %7.4d", t, dt, totalTimeSteps) 
// 
	t += dt;
	totalTimeSteps ++;
	}
}



// Functions Used in Main
